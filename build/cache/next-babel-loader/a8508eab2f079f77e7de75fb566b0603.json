{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/junlin/Desktop/LSU-CSSA-Offcial-WebSite/pages/info/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Typography, Card, Row, Col, Skeleton, Empty } from \"antd\";\nimport { useRouter } from \"next/router\";\nimport Link from \"next/link\";\nimport { API } from \"../../config\";\nimport { useEffect, useState } from \"react\";\nvar Title = Typography.Title,\n    Paragraph = Typography.Paragraph;\nvar Meta = Card.Meta;\n\nvar EventPage = function EventPage(_ref) {\n  _s();\n\n  var events = _ref.events;\n  var router = useRouter();\n  var id = router.query.id;\n  var remainder = events.length % 3;\n\n  var Column = function Column(_ref2) {\n    var _data$thumb_media;\n\n    var data = _ref2.data;\n    return __jsx(Col, {\n      xs: 24,\n      md: 8,\n      style: {\n        width: \"300\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, data ? __jsx(Link, {\n      href: \"/info/[eventID]\",\n      as: \"/events/\".concat(data._id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    }, __jsx(Card, {\n      hoverable: true,\n      title: __jsx(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 32\n        }\n      }, data.title),\n      cover: __jsx(\"div\", {\n        style: {\n          backgroundImage: \"url(\".concat(API + ((_data$thumb_media = data.thumb_media) === null || _data$thumb_media === void 0 ? void 0 : _data$thumb_media.url), \")\"),\n          backgroundPosition: 'center',\n          backgroundSize: 'cover',\n          height: 220\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 32\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }\n    }, __jsx(Meta, {\n      style: {\n        height: \"80px\",\n        textAlign: 'center',\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        paddingBottom: 0\n      },\n      description: data.digest,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }\n    }), __jsx(\"div\", {\n      style: {\n        textAlign: 'right',\n        width: \"100%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }\n    }, new Date(data.update_time).toLocaleDateString()))) : __jsx(Skeleton, {\n      style: {\n        height: \"300px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }));\n  };\n\n  var EventsInGrid = function EventsInGrid() {\n    var data = [];\n\n    var _loop = function _loop(i) {\n      if (i % 3 === 0 && i !== 0) {\n        data.push(__jsx(Row, {\n          type: \"flex\",\n          align: \"middle\",\n          justify: \"space-between\",\n          gutter: [20, 40],\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }\n        }, __jsx(Column, {\n          data: events[i - 2],\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }\n        }), __jsx(Column, {\n          data: events[i - 1],\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }\n        }), __jsx(Column, {\n          data: events[i],\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }\n        })));\n      }\n\n      if (i === events.length - (remainder - 1) - 1) {\n        data.push(__jsx(Row, {\n          type: \"flex\",\n          align: \"middle\",\n          justify: \"space-between\",\n          gutter: [20, 40],\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }\n        }, _toConsumableArray(Array(remainder).keys()).map(function (val) {\n          return __jsx(Column, {\n            data: events[i + val],\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 36\n            }\n          });\n        })));\n      }\n    };\n\n    for (var i = 0; i < events.length; i++) {\n      _loop(i);\n    }\n\n    return data.length !== 0 ? data : __jsx(Empty, {\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      },\n      description: false,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    });\n  };\n\n  return __jsx(EventsInGrid, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 12\n    }\n  });\n};\n\n_s(EventPage, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = EventPage;\nexport var __N_SSP = true;\nexport default EventPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventPage\");","map":{"version":3,"sources":["/Users/junlin/Desktop/LSU-CSSA-Offcial-WebSite/pages/info/index.js"],"names":["Typography","Card","Row","Col","Skeleton","Empty","useRouter","Link","API","useEffect","useState","Title","Paragraph","Meta","EventPage","events","router","id","query","remainder","length","Column","data","width","_id","textAlign","title","backgroundImage","thumb_media","url","backgroundPosition","backgroundSize","height","overflow","textOverflow","paddingBottom","digest","Date","update_time","toLocaleDateString","EventsInGrid","i","push","Array","keys","map","val"],"mappings":"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","sourcesContent":["import fetch from \"isomorphic-fetch\";\nimport {Typography, Card, Row, Col, Skeleton, Empty} from \"antd\";\nimport {useRouter} from \"next/router\";\nimport Link from \"next/link\";\nimport {API} from \"../../config\";\nimport {useEffect, useState} from \"react\";\n\nconst {Title, Paragraph} = Typography;\nconst {Meta} = Card;\n\nconst EventPage = ({events}) => {\n    const router = useRouter();\n    const {id} = router.query;\n    const remainder = events.length % 3;\n\n\n    const Column = ({data}) => (\n        <Col xs={24} md={8} style={{width: \"300\"}}>\n            {data ? (\n                <Link href=\"/info/[eventID]\" as={`/events/${data._id}`}>\n                    <Card\n                        hoverable\n                        title={<div style={{textAlign: 'center'}}>{data.title}</div>}\n                        cover={<div\n                            style={{\n                                backgroundImage: `url(${API + data.thumb_media?.url})`,\n                                backgroundPosition: 'center',\n                                backgroundSize: 'cover',\n                                height: 220\n                            }}/>}\n                    >\n                        <Meta style={{\n                            height: \"80px\",\n                            textAlign: 'center',\n                            overflow: \"hidden\",\n                            textOverflow: \"ellipsis\",\n                            paddingBottom: 0\n                        }} description={data.digest}/>\n                        <div style={{\n                            textAlign: 'right',\n                            width: \"100%\"\n                        }}>{new Date(data.update_time).toLocaleDateString()}</div>\n                    </Card>\n                </Link>\n            ) : (\n                <Skeleton style={{height: \"300px\"}}/>\n            )}\n        </Col>\n    );\n    const EventsInGrid = () => {\n        let data = [];\n        for (let i = 0; i < events.length; i++) {\n            if (i % 3 === 0 && i !== 0) {\n                data.push(\n                    <Row type=\"flex\" align=\"middle\" justify=\"space-between\" gutter={[20, 40]}>\n                        <Column data={events[i - 2]}/>\n                        <Column data={events[i - 1]}/>\n                        <Column data={events[i]}/>\n                    </Row>\n                );\n            }\n            if (i === events.length - (remainder - 1) - 1) {\n                data.push(\n                    <Row type=\"flex\" align=\"middle\" justify=\"space-between\" gutter={[20, 40]}>\n                        {[...Array(remainder).keys()].map(val => {\n                            return <Column data={events[i + val]}/>;\n                        })}\n                    </Row>\n                );\n            }\n        }\n        return data.length !== 0 ? (\n            data\n        ) : (\n            <Empty style={{width: \"100%\", height: \"100%\"}} description={false}/>\n        );\n    };\n    return <EventsInGrid/>;\n};\n\nexport async function getServerSideProps() {\n    // const token = await fetch(`${API}/wechat/accessToken`);\n    const res = await fetch(`${API}/articles?title_ncontains=[推广]`,);\n    const json = await res.json();\n    return {props: {events: json}};\n}\n\n\nexport default EventPage;\n"]},"metadata":{},"sourceType":"module"}